{"version":3,"sources":["movieSlice.js"],"names":["_toolkit","require","_movieApi","_interopRequireDefault","_MovieApiKey","initialState","movies","movieSlice","createSlice","name","reducers","addMovies","state","_ref","payload","_objectSpread","fetch","movieApi","concat","APIKey","console","log","response","data","actions","getAllMovies","reducer"],"mappings":"kIAAA,IAAAA,SAAAC,QAAA,oBACAC,UAAAC,uBAAAF,QAAA,+BACAG,aAAAH,QAAA,o0BAEA,IAAMI,aAAe,CACnBC,OAAQ,IAGJC,YAAa,EAAAP,SAAAQ,aAAY,CAP/BC,KAAA,SASEJ,aAAAA,aARFK,SAAA,CAUIC,UAAW,SAACC,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QAEnB,OADAF,EAAMN,OAASQ,EACfC,cAAA,GACKH,EADL,CAEEE,QAAAA,KARRE,MAAMT,WAAAA,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGMU,UAAAA,QACRN,IADQ,WAAAO,OACGC,aAAAA,OADH,OAAAD,OACIN,UADJ,gBAENA,MAAMN,SAAAA,GACNc,QAAAC,IAAA,QACKT,MAPLL,KAAAA,EAAAA,OAGMe,EAHNf,EAAAA,KAMAa,QAAAC,IAAAC,EAAAC,MANAhB,EAAAA,OAAAA,SAWF,CACAD,OAAAgB,EAAAC,OAZEhB,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,cAgBAI,UAAAJ,WAAAiB,QAAAb,sCAAA,IAAAc,aAAA,SAAAb,GAAA,OAAAA,EAAAN,OAAAA,uDAAAC,WAAAmB","file":"movieSlice.min.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport movieApi from \"../../common/apis/movieApi\";\r\nimport { APIKey } from \"../../common/apis/MovieApiKey\";\r\n\r\nconst initialState = {\r\n  movies: {},\r\n};\r\n\r\nconst movieSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState,\r\n  reducers: {\r\n    addMovies: (state, { payload }) => {\r\n      state.movies = payload;\r\n      return {\r\n        ...state,\r\n        payload,\r\n      };\r\n    },\r\n    // addMovies2: (state, { payload }) => ({\r\n    // ...state,\r\n    // movies: payload,\r\n    // payload,\r\n    // }),\r\nfetch:async (state)=>{\r\n\r\n\r\n      const response = await movieApi\r\n        .get(`?apikey=${APIKey}&s=${movieText}&type=movie`)\r\n\r\n        .catch((err) => {\r\n          console.log(\"Err :\", err);\r\n        });\r\n      console.log(response.data);\r\n    \r\n      return {\r\n        movies: response.data\r\n      }\r\n\r\n}  \r\n}});\r\n\r\nexport const { addMovies } = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies;\r\nexport default movieSlice.reducer;\r\n"]}